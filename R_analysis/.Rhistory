library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
install.packages("nomogramFormula")
library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
library(survcomp)
install.packages("survcomp")
library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
library(survcomp)
install.packages("survcomp")
library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
library(survcomp)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
BiocManager::install("survcomp")
library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
library(survcomp)
library(rms)
library(Hmisc)
library(openxlsx)
####################################################################
# OS Train
train_df <- read.csv ("./result_sorting/result/compare/train_df_os.csv")
test_df <- read.csv ("./result_sorting/result/compare/test_df_os.csv")
val_df <- read.csv ("./result_sorting/result/compare/valid_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
val_df$label_event <- as.numeric(val_df$label_event)
val_df$time_event <- as.numeric(val_df$time_event)
train_df$time_event <- as.integer((train_df$time_event) / 30)
test_df$time_event <- as.integer((test_df$time_event) / 30)
val_df$time_event <- as.integer((val_df$time_event) / 30)
Traintime<-train_df$time_event;Trainevent<-train_df$label_event
Testtime<-test_df$time_event;Testevent<-test_df$label_event
Exttime<-val_df$time_event;Extevent<-val_df$label_event
TrainSurv<-Surv(Traintime,Trainevent)
TestSurv<-Surv(Testtime,Testevent)
ExtSurv<-Surv(Exttime,Extevent)
library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
library(survcomp)
library(rms)
library(Hmisc)
library(openxlsx)
####################################################################
# OS Train
train_df <- read.csv ("./result_sorting/result/compare/train_df_os.csv")
test_df <- read.csv ("./result_sorting/result/compare/test_df_os.csv")
val_df <- read.csv ("./result_sorting/result/compare/valid_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
val_df$label_event <- as.numeric(val_df$label_event)
val_df$time_event <- as.numeric(val_df$time_event)
train_df$time_event <- as.integer((train_df$time_event) / 30)
test_df$time_event <- as.integer((test_df$time_event) / 30)
val_df$time_event <- as.integer((val_df$time_event) / 30)
Traintime<-train_df$time_event;Trainevent<-train_df$label_event
Testtime<-test_df$time_event;Testevent<-test_df$label_event
Exttime<-val_df$time_event;Extevent<-val_df$label_event
TrainSurv<-Surv(Traintime,Trainevent)
TestSurv<-Surv(Testtime,Testevent)
ExtSurv<-Surv(Exttime,Extevent)
# Cox proportional hazards regression
cox_single <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin, data = train_df)
cox_muti <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin+dl_ft, data = train_df)
cox_dl <- coxph(Surv(time_event, label_event) ~ dl_ft, data = train_df)
dd <- datadist(train_df)
options(datadist = 'dd')
f_single <- cph(Surv(time_event, label_event) ~ BCLC+Albumin, data = train_df, x=T, y=T, surv=T)#多变量
dd <- datadist(train_df)
options(datadist = 'dd')
f_multi <- cph(Surv(time_event, label_event) ~ BCLC+Albumin+dl_ft, data = train_df, x=T, y=T, surv=T)#多变量
dd <- datadist(train_df)
options(datadist = 'dd')
f_dl <- cph(Surv(time_event, label_event) ~ dl_ft, data = train_df, x=T, y=T, surv=T)#多变量
summary(cox_single)
summary(cox_muti)
summary(cox_dl)
# feature_selection
# OS Train
train_df <- read.csv ("./result_sorting/multi_variants/train_df_os.csv")
test_df <- read.csv ("./result_sorting/multi_variants/test_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
##############################
# RFS Train
train_df <- read.csv ("./result_sorting/multi_variants/train_df_rfs.csv")
test_df <- read.csv ("./result_sorting/multi_variants/test_df_rfs.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
# feature_selection
# OS Train
train_df <- read.csv ("./result_sorting/multi_variants/train_df_os.csv")
test_df <- read.csv ("./result_sorting/multi_variants/test_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
##############################
# RFS Train
train_df <- read.csv ("./result_sorting/multi_variants/train_df_rfs.csv")
test_df <- read.csv ("./result_sorting/multi_variants/test_df_rfs.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
# feature_selection
# OS Train
train_df <- read.csv ("./result_sorting/multi_variants/train_df_os.csv")
test_df <- read.csv ("./result_sorting/multi_variants/test_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ gender, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ age, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ Albumin, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ bilirubin, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ AFP, data = train_df)
summary(cox_f)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin+AFP, data = train_df)
summary(cox_f)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
##############################
# RFS Train
train_df <- read.csv ("./result_sorting/multi_variants/train_df_rfs.csv")
test_df <- read.csv ("./result_sorting/multi_variants/test_df_rfs.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ gender, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ age, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ Albumin, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ bilirubin, data = train_df)
summary(cox_f)
# uni_var Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ AFP, data = train_df)
summary(cox_f)
# Cox proportional hazards regression
cox_f <- coxph(Surv(time_event, label_event) ~ BCLC+gender+age+Albumin+bilirubin+AFP, data = train_df)
summary(cox_f)
source("D:/Haixia/SYSU_Cancer_HCC/result_230116/compare_dl_fusion.R")
####################################################################
# OS Train
train_df <- read.csv ("./result_sorting/result/compare/train_df_os.csv")
test_df <- read.csv ("./result_sorting/result/compare/test_df_os.csv")
val_df <- read.csv ("./result_sorting/result/compare/valid_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
val_df$label_event <- as.numeric(val_df$label_event)
val_df$time_event <- as.numeric(val_df$time_event)
train_df$time_event <- as.integer((train_df$time_event) / 30)
test_df$time_event <- as.integer((test_df$time_event) / 30)
val_df$time_event <- as.integer((val_df$time_event) / 30)
Traintime<-train_df$time_event;Trainevent<-train_df$label_event
Testtime<-test_df$time_event;Testevent<-test_df$label_event
Exttime<-val_df$time_event;Extevent<-val_df$label_event
TrainSurv<-Surv(Traintime,Trainevent)
TestSurv<-Surv(Testtime,Testevent)
ExtSurv<-Surv(Exttime,Extevent)
# Cox proportional hazards regression
cox_single <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin, data = train_df)
cox_muti <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin+dl_ft, data = train_df)
cox_dl <- coxph(Surv(time_event, label_event) ~ dl_ft, data = train_df)
dd <- datadist(train_df)
options(datadist = 'dd')
f_single <- cph(Surv(time_event, label_event) ~ BCLC+Albumin, data = train_df, x=T, y=T, surv=T)#多变量
dd <- datadist(train_df)
options(datadist = 'dd')
f_multi <- cph(Surv(time_event, label_event) ~ BCLC+Albumin+dl_ft, data = train_df, x=T, y=T, surv=T)#多变量
dd <- datadist(train_df)
options(datadist = 'dd')
f_dl <- cph(Surv(time_event, label_event) ~ dl_ft, data = train_df, x=T, y=T, surv=T)#多变量
summary(cox_single)
summary(cox_muti)
summary(cox_dl)
# single
CIN_train <- survConcordance(TrainSurv~predict(cox_single,train_df))
CIN_test <- survConcordance(TestSurv~predict(cox_single,test_df))
CIN_ext <- survConcordance(ExtSurv~predict(cox_single,val_df))
# multi
CIN_train2 <- survConcordance(TrainSurv~predict(cox_muti,train_df))
CIN_test2 <- survConcordance(TestSurv~predict(cox_muti,test_df))
CIN_ext2 <- survConcordance(ExtSurv~predict(cox_muti,val_df))
# dl
CIN_train3 <- survConcordance(TrainSurv~predict(cox_dl,train_df))
CIN_test3 <- survConcordance(TestSurv~predict(cox_dl,test_df))
CIN_ext3 <- survConcordance(ExtSurv~predict(cox_dl,val_df))
# p VALUE
# TRAIN
train_pre=list()
train_pre$x=predict(cox_single, train_df)
Ctrain=list(c.index=CIN_train$concordance,n=CIN_train$n,se=CIN_train$std.err,data=list())
Ctrain$data=train_pre
train_pre2=list()
train_pre2$x=predict(cox_muti, train_df)
Ctrain2=list(c.index=CIN_train2$concordance,n=CIN_train2$n,se=CIN_train2$std.err,data=list())
Ctrain2$data=train_pre2
train_pre3=list()
train_pre3$x=predict(cox_dl, train_df)
Ctrain3=list(c.index=CIN_train3$concordance,n=CIN_train3$n,se=CIN_train3$std.err,data=list())
Ctrain3$data=train_pre3
# cindex.comp should put the better one in the first parameter
p_train<-cindex.comp(Ctrain2, Ctrain)
print('p_train')
p_train
p_train2<-cindex.comp(Ctrain3, Ctrain)
print('p_train2')
p_train2
p_train3<-cindex.comp(Ctrain2, Ctrain3)
print('p_train3')
p_train3
# Test
train_pre=list()
train_pre$x=predict(cox_single, test_df)
Ctrain=list(c.index=CIN_test$concordance,n=CIN_test$n,se=CIN_test$std.err,data=list())
Ctrain$data=train_pre
train_pre2=list()
train_pre2$x=predict(cox_muti, test_df)
Ctrain2=list(c.index=CIN_test2$concordance,n=CIN_test2$n,se=CIN_test2$std.err,data=list())
Ctrain2$data=train_pre2
train_pre3=list()
train_pre3$x=predict(cox_dl, test_df)
Ctrain3=list(c.index=CIN_test3$concordance,n=CIN_test3$n,se=CIN_test3$std.err,data=list())
Ctrain3$data=train_pre3
# cindex.comp should put the better one in the first parameter
p_test<-cindex.comp(Ctrain2, Ctrain)
print('p_test')
p_test
p_test2<-cindex.comp(Ctrain3, Ctrain)
print('p_test2')
p_test2
p_test3<-cindex.comp(Ctrain2, Ctrain3)
print('p_test3')
p_test3
library("survival")
# install.packages("survminer")
library("survminer")
#
# if (!requireNamespace("BiocManager", quietly = TRUE))
#   install.packages("BiocManager")
# BiocManager::install(version = "3.12")
# library("BiocManager")
# BiocManager::install("survcomp")
# install.packages("nomogramFormula")
library(nomogramFormula)
library(survcomp)
library(rms)
library(Hmisc)
library(openxlsx)
####################################################################
# OS Train
train_df <- read.csv ("./result_sorting/result/compare/train_df_os.csv")
test_df <- read.csv ("./result_sorting/result/compare/test_df_os.csv")
val_df <- read.csv ("./result_sorting/result/compare/valid_df_os.csv")
train_df$label_event <- as.numeric(train_df$label_event)
train_df$time_event <- as.numeric(train_df$time_event)
test_df$label_event <- as.numeric(test_df$label_event)
test_df$time_event <- as.numeric(test_df$time_event)
val_df$label_event <- as.numeric(val_df$label_event)
val_df$time_event <- as.numeric(val_df$time_event)
train_df$time_event <- as.integer((train_df$time_event) / 30)
test_df$time_event <- as.integer((test_df$time_event) / 30)
val_df$time_event <- as.integer((val_df$time_event) / 30)
Traintime<-train_df$time_event;Trainevent<-train_df$label_event
Testtime<-test_df$time_event;Testevent<-test_df$label_event
Exttime<-val_df$time_event;Extevent<-val_df$label_event
TrainSurv<-Surv(Traintime,Trainevent)
TestSurv<-Surv(Testtime,Testevent)
ExtSurv<-Surv(Exttime,Extevent)
# Cox proportional hazards regression
cox_single <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin, data = train_df)
cox_muti <- coxph(Surv(time_event, label_event) ~ BCLC+Albumin+dl_ft, data = train_df)
cox_dl <- coxph(Surv(time_event, label_event) ~ dl_ft, data = train_df)
dd <- datadist(train_df)
options(datadist = 'dd')
f_single <- cph(Surv(time_event, label_event) ~ BCLC+Albumin, data = train_df, x=T, y=T, surv=T)#多变量
dd <- datadist(train_df)
options(datadist = 'dd')
f_multi <- cph(Surv(time_event, label_event) ~ BCLC+Albumin+dl_ft, data = train_df, x=T, y=T, surv=T)#多变量
dd <- datadist(train_df)
options(datadist = 'dd')
f_dl <- cph(Surv(time_event, label_event) ~ dl_ft, data = train_df, x=T, y=T, surv=T)#多变量
summary(cox_single)
summary(cox_muti)
summary(cox_dl)
# single
CIN_train <- survConcordance(TrainSurv~predict(cox_single,train_df))
CIN_test <- survConcordance(TestSurv~predict(cox_single,test_df))
CIN_ext <- survConcordance(ExtSurv~predict(cox_single,val_df))
# multi
CIN_train2 <- survConcordance(TrainSurv~predict(cox_muti,train_df))
CIN_test2 <- survConcordance(TestSurv~predict(cox_muti,test_df))
CIN_ext2 <- survConcordance(ExtSurv~predict(cox_muti,val_df))
# dl
CIN_train3 <- survConcordance(TrainSurv~predict(cox_dl,train_df))
CIN_test3 <- survConcordance(TestSurv~predict(cox_dl,test_df))
CIN_ext3 <- survConcordance(ExtSurv~predict(cox_dl,val_df))
# p VALUE
# TRAIN
train_pre=list()
train_pre$x=predict(cox_single, train_df)
Ctrain=list(c.index=CIN_train$concordance,n=CIN_train$n,se=CIN_train$std.err,data=list())
Ctrain$data=train_pre
train_pre2=list()
train_pre2$x=predict(cox_muti, train_df)
Ctrain2=list(c.index=CIN_train2$concordance,n=CIN_train2$n,se=CIN_train2$std.err,data=list())
Ctrain2$data=train_pre2
train_pre3=list()
train_pre3$x=predict(cox_dl, train_df)
Ctrain3=list(c.index=CIN_train3$concordance,n=CIN_train3$n,se=CIN_train3$std.err,data=list())
Ctrain3$data=train_pre3
# cindex.comp should put the better one in the first parameter
p_train<-cindex.comp(Ctrain2, Ctrain)
print('p_train')
p_train
p_train2<-cindex.comp(Ctrain3, Ctrain)
print('p_train2')
p_train2
p_train3<-cindex.comp(Ctrain2, Ctrain3)
print('p_train3')
p_train3
